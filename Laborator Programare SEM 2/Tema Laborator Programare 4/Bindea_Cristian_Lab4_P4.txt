/*
   Bindea Gheorghe Cristian  Grupa 2115
   Problema 4 - Program care din doua siruri de numere returneaza un al treilea in care numerele sunt ordonare si nu se repeta 
*/

#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>

void citire(int* v, int n);
void sortare(int* p, int n);
void afisare(int *v, int n);
void eliminare(int* a, int& n);
int* aranjare(int &n3,int v1[], int n1, int v2[], int n2);

int main()
{
   int n1, n2 = 7;
   printf("Dimensiunea primului sir: "); scanf("%d", &n1);
   int* v1 = new int[n1];
   puts("Introduceti elemente pentru primul sir"); citire(v1, n1);
   printf("Sortat: "); sortare(v1, n1); afisare(v1, n1);
   printf("Dimensiunea celui de-al doilea sir: "); scanf("%d", &n2);
   int* v2 = new int[n2];
   puts("Introduceti elemente pentru al doile sir"); citire(v2, n2);
   printf("Sortat: "); sortare(v2, n2); afisare(v2, n2);
   int n3;
   int* v3 = aranjare(n3,v1, n1, v2, n2);
   puts("Sirul rezultat este:");
   afisare(v3, n3);

   return 0;
}

void sortare(int* p, int n)
{
   int i, j, aux, ok;
   for (i = 0; i < n; i++)
   {
      ok = 0;
      for (j = 1; j < n - i; j++)
      {
         if (p[j - 1] > p[j])
         {
            aux = p[j];
            p[j] = p[j - 1];
            p[j - 1] = aux;
            ok = 1;
         }
      }
      if (ok == 0)
         break;
   }
}
int* aranjare(int &n3,int *v1, int n1, int *v2, int n2)
{
   n3 = 0;
   static int* v3 = new int[n1 + n2];
   int i = 0, j = 0;
   while ((i < n1) && (j < n2))
   {
      if (v1[i] < v2[j])
      {
         v3[n3++] = v1[i];
         i++;
      }
      else
      {
         v3[n3++] = v2[i];
         j++;
      }
   }

   while (i < n1)
      v3[n3++] = v1[i++];
   while (j < n2)
      v3[n3++] = v2[j++];
   eliminare(v3, n3);
   return v3;
}
void eliminare(int* a, int& n)
{
   int aux;
   for (int i = 0; i < n-1; i++)
   {
      if (a[i] == a[i+1])
      {
         for (int j = i; j < n - 1; j++)
         {
            aux = a[j];
            a[j] = a[j + 1];
            a[j + 1] = aux;
         }
         //free(a + n);
         n--;
         i--;
      }
   }
}
void citire(int *v, int n)
{
   for (int i = 0; i < n; i++)
   {
      printf("[%d] = ", i); scanf("%d", &v[i]);
   }
   printf("\n");
}
void afisare(int *v, int n)
{
   for (int i = 0; i < n; i++)
      printf("%d ", v[i]);
   printf("\n");
}