/*
		Bindea Gheorghe Cristian
		Problema 2 - Program care citeste dint-un fisier 10 numere intregi apoi le ordoneaza crescator si descrescator, si numarul de numere pare, toate folosindu-se de functii
*/
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>
#include <algorithm>

#define DIM 100

int crescator(const void* a, const void* b);
int descrescator(const void* a, const void* b);
void afisare(int v[], FILE* f);
void nrPare(int v[], FILE* f);
int main()
{
	FILE* f;
	errno_t err;
	err = fopen_s(&f, "fisier.txt", "w");
	if (err != 0) {
		puts("(1) Eroare la creare fisierului");
		exit(1);
	}
	int nr;
	puts("Introduceti 10 numere");
	for (int i = 1; i <= 10; i++)
	{
		if (i == 1)
		{
			printf("Primul numar: "); scanf("%d", &nr); fprintf(f, "%d\n", nr);
		}
		else
		{
			printf("Al %d-lea numar: ", i); scanf("%d", &nr); fprintf(f, "%d\n", nr);
		}
	}
	puts("Citire terminata\n");
	fclose(f);

	err = fopen_s(&f, "fisier.txt", "r");
	if (err != 0) {
		puts("(2) Eroare la citirea fisierului");
		exit(1);
	}

	char* line = new char[DIM];
	int* v = new int[DIM];
	for (int i = 0; i < 10; i++)
	{
		fgets(line, DIM, f);
		v[i] = atoi(line);
	}
	fclose(f);

	qsort(v, 10, sizeof(int), crescator);
	puts("Numerele ordonate crescator sunt:");
	afisare(v, f);

	qsort(v, 10, sizeof(int), descrescator);
	puts("Numerele ordonate descrescator sunt:");
	afisare(v, f);
	nrPare(v, f);
	delete[]line;
	delete[]v;
	return  0;
}

void afisare(int v[], FILE* f)
{
	errno_t err;
	err = fopen_s(&f, "fisier.txt", "a");
	if (err != 0) {
		puts("(3)Eroare la creare fisierului");
		exit(1);
	}
	for (int i = 0; i < 10; i++)
	{
		fprintf(f, "%d ", v[i]);
		printf("%d ", v[i]);
	}
	fprintf(f, "\n"); printf("\n");
	fclose(f);
}
void nrPare(int v[], FILE* f)
{
	errno_t err;
	err = fopen_s(&f, "fisier.txt", "a");
	if (err != 0) {
		puts("(4)Eroare la creare fisierului");
		exit(1);
	}

	printf("Numarul de numere pare este: "); fprintf(f, "Numarul de numere pare este: ");
	int cnt = 0;
	for (int i = 0; i < 10; i++)
		if (v[i] % 2 == 0)
			cnt++;
	printf("%d ", cnt); fprintf(f, "%d ", cnt);
	printf("\n"); fprintf(f, "\n");
	fclose(f);
}
int crescator(const void* a, const void* b)
{
	return (*(int*)a - *(int*)b);
}
int descrescator(const void* a, const void* b)
{
	return (*(int*)b - *(int*)a);
}