/*
	Bindea Gheorghe Cristian  Grupa 2115
	Problema 8 - Program care calculeaza produsul elementelor de pe pozitii impare si suma numerelor prime dintr-un tablou folosind functii recursive
*/

#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>
using namespace std;

int suma(int v[], int i);
bool eprim(int n);
int produs(int v[], int i);
int main()
{
	int v[100];

	FILE* f;
	errno_t err;
	err = fopen_s(&f, "test.txt", "r");
	if (err != NULL)
	{
		puts("Eroare la deschiderea fisierului");
		exit(1);
	}

	fscanf(f, "%d ", &v[0]);
	for (int i = 1; i < v[0]; i++)
	{
		fscanf(f, "%d ", &v[i]);
	}

	fclose(f);
	printf("Produsul numerelor din tablou de pe pozitii impare este %d\n", produs(v, 1));
	printf("Suma numerelor prime din tablou este %d", suma(v, 1));
	return 0;
}

int produs(int v[], int i)
{
	if (i == v[0] - 1 && i % 2 == 1)
		return v[i];
	else if (i == v[0] - 1 && i % 2 == 0)
		return 1;
	else if (i % 2 == 1)
		return produs(v, i + 1) * v[i];
	return 1 * produs(v, i + 1);
}
bool eprim(int n)
{
	if (n == 1)
		return true;
	if (n == 2)
		return true;
	if (n % 2 == 0)
		return false;
	for (int i = 3; i < n / 2; i = i + 2)
		if (n % i == 0)
			return false;
	return true;
}
int suma(int v[], int i)
{
	if (i == v[0] - 1 && eprim(v[i]) == false)
		return 0;
	if (i == v[0] - 1 && eprim(v[i]) == true)
		return v[i];
	if (eprim(v[i]))
		return v[i] + suma(v, i + 1);
	return suma(v, i + 1);
}