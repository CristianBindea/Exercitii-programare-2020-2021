/*
   Bindea Gheorghe Cristian  Grupa 2115
   Problema 4 - Program care continua problema 3 si foloseste supraincarcarea operatorilor new si delete pentru a aloca dinamic obiecte ale clasei Departament
*/

#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
using namespace std;

const int dim = 40;

class Angajat
{
   char nume[dim];
   double salariu;
public:
   Angajat() { strcpy(nume, "Necunoscut"); salariu = 0.0; }
   Angajat(char nume[], double salariu) { strcpy(this->nume, nume); this->salariu = salariu; }
   void citire()
   {
      char num[dim]; double sal;
      cout << "Introduceti numele: "; cin >> num;
      cout << "Introduceti salariul: "; cin >> sal;
      strcpy(this->nume, num); this->salariu = sal;
   }
   void afisare() {
      cout << nume << " cu salariul de " << salariu << endl;
   }
};

class Departament
{
   int nrAngajati;
   Angajat* angajati;
public:
   Departament() {
      nrAngajati = 0;
      angajati = new Angajat[nrAngajati];
   }
   Departament(int nrAngajati)
   {
      this->nrAngajati = nrAngajati;
      angajati = new Angajat[nrAngajati];
   }
   Angajat operator[](int index) {
      return angajati[index];
   }
   void citire()
   {
      cout << "Introduceti " << nrAngajati << " angajati\n";
      for (int i = 0; i < nrAngajati; i++)
      {
         cout << "Introduceti date despre angajatul " << i << endl;
         angajati[i].citire();
      }
   }
   void* operator new(size_t size) {
      cout << "\nOperator new\n";
      void* p = ::operator new(size); //void * p = malloc(size);
      return p;
   }
   void operator delete(void* p) {
      cout << "\nOperator delete\n";
      free(p);
   }
};

int main() {
   int nrDeAngajati, nr;
   cout << "Introduceti numarul de angajati: "; cin >> nrDeAngajati;
   Departament *d = new Departament(nrDeAngajati);
   d->citire();
   cout << "Introduceti un numar (<" << nrDeAngajati << ")\n"; cin >> nr;
   while(nr>=nrDeAngajati || nr<0)
   {
      cout << "Numar invalid. Introduceti un numar (<" << nrDeAngajati << ")\n";
      cin >> nr;
   }
   cout << "Angajatul cu numarul " << nr << " este ";
   (*d)[nr].afisare();

   delete d;
   return 0;
}