/*
   Bindea Gheorghe Cristian  Grupa 2115
   Problema 8 - Program care foloseste o clasa Fractie cu functii prietene pentru simplificare, adunare, scadere, inmultire si impartire
*/

#define _CRT_SECURE_NO_WARNINGS
#include <iostream>

using namespace std;

class Fractie {
   int a;//numarator
   int b;//numitor
   static int icount;
public:
   Fractie() { a = 0; b = 1; icount++; }
   Fractie(int x, int y) { a = x; b = y; icount++; }
   void setNumarator(int num) { a = num; }
   void setNumitor(int num) { b = num; }
   int getNumarator(void) { return a; }
   int getNumitor(void) { return b; }
   static int getIcount(void) { return icount; };
   friend Fractie simplifica(Fractie f);
   friend Fractie adunare(Fractie f1, Fractie f2);
   friend Fractie scadere(Fractie f1, Fractie f2);
   friend Fractie inmultire(Fractie f1, Fractie f2);
   friend Fractie impartire(Fractie f1, Fractie f2);

   ~Fractie() {
      //cout << "\nicount: " << icount << endl;
      icount--;
   }
};
int Fractie::icount = 0;
int cmmdc(int a, int b);
Fractie simplifica(Fractie f);
Fractie adunare(Fractie f1, Fractie f2);
Fractie scadere(Fractie f1, Fractie f2);
Fractie inmultire(Fractie f1, Fractie f2);
Fractie impartire(Fractie f1, Fractie f2);
void afisare(Fractie f);

int main()
{
   int x, y;
   cout << "Introduceti doua fractii\n";
   cout << "Fractia 1\n";
   cout << "Numarator = "; cin >> x;
   cout << "Numitor = "; cin >> y;
   if (y == 0) {
      cout << "\nNumitorul nu poate fi 0\n";
      return 1;
   }
   Fractie f1(x, y);

   cout << "Fractia 2\n";
   cout << "Numarator = "; cin >> x;
   cout << "Numitor = "; cin >> y;
   if (y == 0) {
      cout << "\nNumitorul nu poate fi 0\n";
      return 1;
   }
   Fractie f2(x, y);
   cout << "Fractia 1: "; afisare(f1);
   cout << "Fractia 2: "; afisare(f2);

   f1 = simplifica(f1);
   f2 = simplifica(f2);
   cout << "Fractia 1 dupa simplificare: "; afisare(f1);
   cout << "Fractia 2 dupa simplificare: "; afisare(f2);

   afisare(f1);
   cout << "+\n";
   afisare(f2);
   Fractie f3 = adunare(f1, f2);
   cout << "=\n";
   afisare(f3);
   cout << "\n";

   afisare(f1);
   cout << "-\n";
   afisare(f2);
   f3 = scadere(f1, f2);
   cout << "=\n";
   afisare(f3);
   cout << "\n";

   afisare(f1);
   cout << "*\n";
   afisare(f2);
   f3 = inmultire(f1, f2);
   cout << "=\n";
   afisare(f3);
   cout << "\n";

   afisare(f1);
   cout << "/\n";
   afisare(f2);
   f3 = impartire(f1, f2);
   cout << "=\n";
   afisare(f3);
   cout << "\n";
   return 0;
}

int cmmdc(int a, int b) {
   bool negative = false;
   if (a < 0 && b < 0) {
      a = -a;
      b = -b;
   }
   else if (a < 0) {
      negative = true;
      a = -a;
   }
   else if (b < 0) {
      negative = true;
      b = -b;
   }
   while (a != b)
      a > b ? a -= b : b -= a;
   if (negative)
      return -a;
   else
      return a;
}
Fractie simplifica(Fractie f) {
   int divizor = cmmdc(f.a, f.b);
   Fractie rezultat(f.a / divizor, f.b / divizor);
   return rezultat;
}
Fractie adunare(Fractie f1, Fractie f2)
{
   Fractie rezultat(f1.a * f2.b + f2.a * f1.b, f1.b * f2.b);
   return rezultat;
}
Fractie scadere(Fractie f1, Fractie f2)
{
   Fractie rezultat(f1.a * f2.b - f2.a * f1.b, f1.b * f2.b);
   return rezultat;
}
Fractie inmultire(Fractie f1, Fractie f2)
{
   Fractie rezultat(f1.a * f2.a, f1.b * f1.b);
   return rezultat;
}
Fractie impartire(Fractie f1, Fractie f2)
{
   Fractie rezultat(f1.a * f2.b, f1.b * f1.a);
   return rezultat;
}
void afisare(Fractie f)
{
   int x = f.getNumarator();
   int y = f.getNumitor();
   bool negative = false;
   if (x < 0 && y < 0) {
      x = -x;
      y = -y;
   }
   else if (x < 0) {
      x = -x;
      negative = true;
   }
   else if (y < 0) {
      y = -y;
      negative = true;
   }

   if (negative)
      cout << "-";

   if (x == 0)
      cout << 0 << endl;
   else if (y == 1)
      cout << x << endl;
   else
      cout << x << "/" << y << endl;
}